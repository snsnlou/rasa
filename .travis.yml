language: python
sudo: enabled
cache:
  directories:
  - $HOME/.cache/pip
  - /tmp/cached/
python:
- '3.5'
- '3.6'
env:
  global:
  - BOTO_CONFIG=/dev/null
install:
- pip install git+https://github.com/tmbo/MITIE.git
- pip install -r alt_requirements/requirements_dev.txt
- pip install -e .
- pip install https://github.com/explosion/spacy-models/releases/download/en_core_web_md-2.0.0/en_core_web_md-2.0.0.tar.gz
  --no-cache-dir > jnk
- python -m spacy link en_core_web_md en
- pip install https://github.com/explosion/spacy-models/releases/download/de_core_news_sm-2.0.0/de_core_news_sm-2.0.0.tar.gz
  --no-cache-dir > jnk
- python -m spacy link de_core_news_sm de
- if [[ ! -f /tmp/cached/total_word_feature_extractor.dat ]]; then wget --quiet -P
  /tmp/cached/ https://s3-eu-west-1.amazonaws.com/mitie/total_word_feature_extractor.dat;
  fi
- mv /tmp/cached/total_word_feature_extractor.dat data/total_word_feature_extractor.dat
- pip list
before_script:
- mkdir $HOME/tmp
- export TMPDIR=$HOME/tmp
- bash test_mypy.sh
jobs:
  include:
  - stage: test
    name: Check Dependency Licenses
    before_script:
    - 'curl -H ''Cache-Control: no-cache'' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh
      | sudo bash'
    script:
    - pip freeze > requirements.txt
    - fossa init
    - fossa analyze
    - fossa test
  - stage: docs
    install:
    - RASABASTER=rasabaster-0.7.18.tar.gz
    - curl -sSL -o $RASABASTER "https://storage.googleapis.com/docs-theme/${RASABASTER}?q=$(date
      +%s%N)"
    - pip install $RASABASTER
    - pip install --no-cache-dir -r alt_requirements/requirements_docs.txt
    - pip install git+https://${GITHUB_TOKEN}:x-oauth-basic@github.com/RasaHQ/sphinxcontrib-versioning.git@version_list
    - pip install -e .
    - pip list
    script:
    - eval "$(ssh-agent -s)"; touch docs_key; chmod 0600 docs_key
    - openssl aes-256-cbc -K $encrypted_1708c37fe733_key -iv $encrypted_1708c37fe733_iv
      -in secrets.tar.enc -out secrets.tar -d
    - tar -xvf secrets.tar
    - ssh-add docs_key
    - git config --global user.email "builds@travis-ci.com"
    - git config --global user.name "Travis CI"
    - git remote set-url --push origin "git@github.com:$TRAVIS_REPO_SLUG"
    - export ${!TRAVIS*}
    - sphinx-versioning push docs newdocs . -- -b dirhtml  -A html_theme=rasabaster
  - stage: test
    name: NLU starter pack
    python: 3.6
    script:
    - git clone https://github.com/RasaHQ/starter-pack-rasa-nlu.git
    - cd starter-pack-rasa-nlu
    - python -m pytest tests/test_nlu.py
  - stage: test
    name: Stack starter pack (NLU only)
    python: 3.6
    script:
    - git clone https://github.com/RasaHQ/starter-pack-rasa-stack.git
    - cd starter-pack-rasa-stack
    - python -m pytest tests/test_nlu.py
  - stage: trigger website rebuild
    script:
    - eval "$(ssh-agent -s)"; touch nlu_docs_to_website_trigger_key; chmod 0600 nlu_docs_to_website_trigger_key
    - openssl aes-256-cbc -K $encrypted_1708c37fe733_key -iv $encrypted_1708c37fe733_iv
      -in secrets.tar.enc -out secrets.tar -d
    - tar xvf secrets.tar
    - ssh-add nlu_docs_to_website_trigger_key
    - git config --global user.email "builds@travis-ci.com"
    - git config --global user.name "Travis CI"
    - git clone -b master --single-branch git@github.com:RasaHQ/rasa-website.git
    - cd rasa-website
    - git commit --allow-empty -m "trigger nlu docs update"
    - git push origin master
  - stage: deploy
    name: PyPI test
    python: 3.6
    install: skip
    script: skip
    deploy:
      provider: pypi
      user: amn41
      distributions: sdist bdist_wheel
      true:
        branch: master
        tags: true
      password:
        secure: MeL1Ve97eBY+VbNWuQNuLzkPs0TPc+Zh8OfZkhw69ez5imsiWpvp0LrUOLVW3CcC0vNTANEBOVX/n1kHxfcqkf/cChNqAkZ6zTMmvR9zHDwQxXVGZ3jEQSQM+fHdQpjwtH7BwojyxaCIC/5iza7DFMcca/Q6Xr+atdTd0V8Q7Nc5jFHEQf3/4oIIm6YeCUiHcEu981LRdS04+jvuFUN0Ejy+KLukGVyIWyYDjjGjs880Mj4J1mgmCihvVkJ1ujB65rYBdTjls3JpP3eTk63+xH8aHilIuvqB8TDYih8ovE/Vv6YwLI+u2HoEHAtBD4Ez3r71Ju6JKJM7DhWb5aurN4M7K6DC8AvpUl+PsJbNP4ZeW2jXMH6lT6qXKVaSw7lhZ0XY3wunyVcAbArX4RS0B9pb1nHBYUBWZjxXtr8lhkpGFu7H43hw63Y19qb8z4+1cGnijgz1mqXSAssuc+3r0W0cSr+OsCjmOs7cwT6HMQvPEKxLohwBOS/I3EbuKQOYMjFN5BWP5JXbsG45awV9tquxEW8zxjMetR+AOcYoyrDeiR8sAnj1/F99DE0bL1KyW/G5VNu2Xi/c+0M3KvP3+F8XTCuUY/5zTvqh1Qz1jcdiwsiAhO4eBQzQnjeFlxdiVeue2kmD5qsh+VLKKuKLfyVoaV7b1kBlAtBDu7+hDpA=
before_install:
- openssl aes-256-cbc -K $MY_KEY -iv $MY_IV -in root_key.enc -out root_key -d
script:
- echo "SCRIPT SECTION"
